#set( $layout = "/wechat/layout/main.vm")
<style type="text/css">
    body, html,#allmap {width: 100%;height: 100%;overflow: hidden;margin:0;font-family:"微软雅黑";}
</style>
<body>
<div id="allmap"></div>
</body>
<script type="text/javascript">
    // 百度地图API功能
    var map = new BMap.Map("allmap");
    var p0 = new BMap.Point($longitude,$latitude);
    map.centerAndZoom(p0, 15);
    var pointList = [];
    pointList.push(p0);
    #set($count=1)
    #foreach($l in $list)
        var p$count = new BMap.Point($l.longitude,$l.latitude);
        pointList.push(p$count);
    #set($count=$count+1)
    #end
    console.log(pointList);
    showPoly(pointList);
    map.enableScrollWheelZoom(true);     //开启鼠标滚轮缩放
    function showPoly(pointList){

        //循环显示点对象
        for(c=0;c<pointList.length;c++){
            var marker = new BMap.Marker(pointList[c]);
            map.addOverlay(marker);
            //将途经点按顺序添加到地图上
            var label = new BMap.Label(c+1,{offset:new BMap.Size(20,-10)});
            marker.setLabel(label);
        }

        var  group = Math.floor( pointList.length /11 ) ;
        var mode = pointList.length %11 ;

        var driving = new BMap.DrivingRoute( map, {onSearchComplete: function(results){
            if (driving.getStatus() == BMAP_STATUS_SUCCESS){
                var plan = driving.getResults().getPlan(0);
                var  num = plan.getNumRoutes();
                for(var j =0;j<num ;j++){
                    var pts= plan.getRoute(j).getPath();    //通过驾车实例，获得一系列点的数组
                    var polyline = new BMap.Polyline(pts);
                    map.addOverlay(polyline);
                }
            }
        }});
        for(var i =0;i<group;i++){
            var waypoints = pointList.slice(i*11+1,(i+1)*11);
            //注意这里的终点如果是11的倍数的时候，数组可是取不到最后一位的，所以要注意终点-1喔。感谢song141的提醒，怪我太粗心大意了~
            driving.search(pointList[i*11], pointList[(i+1)*11-1],{waypoints:waypoints});//waypoints表示途经点
        }
        if( mode != 0){
            var waypoints = pointList.slice(group*11,pointList.length-1);//多出的一段单独进行search
            driving.search(pointList[group*11],pointList[pointList.length-1],{waypoints:waypoints});
        }

    }
</script>